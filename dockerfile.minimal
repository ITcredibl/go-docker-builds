# INTERMEDIATE EXAMPLE: Multi-stage build without security hardening
# Demonstrates size reduction without production best practices

# Build stage
FROM golang:1.22 AS builder
WORKDIR /app

# Copy dependency files if they exist
COPY go.mod ./
RUN if [ -f go.sum ]; then COPY go.sum ./ && go mod download; else go mod download; fi

COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -o /usr/bin/app ./cmd/server/

# Run stage - Minimal but insecure (runs as root)
FROM alpine:latest
COPY --from=builder /usr/bin/app /app
CMD ["/app"]
